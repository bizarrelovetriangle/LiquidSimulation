#version 430 core
#include "../../common.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer ParticlesInput
{
	Particle particles[];
};
layout(std430, binding = 1) buffer GridInput
{
	GridCell grid[];
};
layout(std430, binding = 2) buffer PairsCount
{
	int pairs_count;
};
layout(std430, binding = 3) buffer PairsOutput
{
	PairData pairs[];
};

layout(std140, binding = 0) uniform ConfigInput { Config config; };
layout(location = 1) uniform float dt;
layout(location = 2) uniform ivec2 gridSize;
layout(location = 3) uniform ivec2 offset;

void main() {
	ivec2 gridPos = ivec2(gl_GlobalInvocationID.xy) * 2 + offset;
	GridCell orgCell = grid[gridPos.y * gridSize.x + gridPos.x];

	for (int i = orgCell.pairs_start; i < orgCell.pairs_end; ++i) {
		PairData pair = pairs[i];

		float pressureM = config.k * (particles[pair.first].density - config.restDensity + particles[pair.second].density - config.restDensity);
		float nearPressureM = config.k_near * (particles[pair.first].density_near + particles[pair.second].density_near);

		vec2 pressure = dt * (pressureM * pair.proximity_coefficient + nearPressureM * pair.proximity_coefficient_2) *
			pair.normal;

		particles[pair.first].velosity -= pressure;
		particles[pair.second].velosity += pressure;
	}
}