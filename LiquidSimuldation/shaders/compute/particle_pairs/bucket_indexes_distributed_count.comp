#version 430 core
#include "../../common.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer DistributedBucketsCountOutput
{
	int distributed_buckets[];
};
layout(std430, binding = 1) buffer GlobalBucketIndexesCountOutput
{
	int global_bucket_indexes[];
};
layout(std430, binding = 2) buffer DistributedBucketIndexesCountOutput
{
	int distributed_bucket_indexes[];
};

layout(location = 0) uniform int parallel;
layout(location = 1) uniform int dim;
layout(location = 2) uniform int byte;

void main() {
	const uint buckets_size = 1 << 8;
	const uint global_buckets_start = (dim * 4 + byte) * buckets_size;
	distributed_bucket_indexes[gl_WorkGroupID.x] = global_bucket_indexes[global_buckets_start + gl_WorkGroupID.x];
	
	for (uint i = 1; i < parallel; ++i) {
		uint index = buckets_size * i + gl_WorkGroupID.x;
		uint prev_index = index - buckets_size;
		distributed_bucket_indexes[index] = distributed_bucket_indexes[prev_index] + distributed_buckets[prev_index];
	}
}
