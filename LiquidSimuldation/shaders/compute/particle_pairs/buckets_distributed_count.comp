#version 430 core
#include "../../common.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 1) buffer PairsCount
{
	int pairs_count;
};
layout(std430, binding = 2) buffer PairsOutput
{
	PairData pairs[];
};
layout(std430, binding = 3) buffer DistributedBucketsCountOutput
{
	int distributed_buckets[];
};

layout(location = 0) uniform int chunk_size;
layout(location = 1) uniform int dimension;
layout(location = 2) uniform int byte;

void main() {
	uint shift = 8 * byte;
	const uint buckets_size = 1 << 8;
	const uint mask = buckets_size - 1;
	uint distributed_buckets_start = gl_WorkGroupID.x * buckets_size;

	uint pairs_start = gl_WorkGroupID.x * chunk_size;
	uint pairs_end = min(pairs_start + chunk_size, pairs_count);

	for (uint i = pairs_start; i < pairs_end; ++i) {
		ivec2 pos = pairs[i].grid_position;
		uint value = dimension == 0 ? pos.x : pos.y;
		uint hash = value >> shift & mask;
		distributed_buckets[distributed_buckets_start + hash]++;
	}
}
