#version 430 core
#include "../../common.glsl"

layout(local_size_x = 4, local_size_y = 2, local_size_z = 1) in;

layout(std430, binding = 0) buffer BucketsCountInput
{
	int buckets[];
};
layout(std430, binding = 1) buffer BucketIndexesCountOutput
{
	int bucket_indexes[];
};
layout(std430, binding = 2) buffer SingularBucketsOutput
{
	bool singular_buckets[];
};

void main() {
	const uint buckets_size = 1 << 8;
	const uint byte = gl_LocalInvocationID.y * 4 + gl_LocalInvocationID.x;
	const uint buckets_start = byte * buckets_size;
	uint non_zero_buckets = 0;

	if (buckets[buckets_start] > 0) non_zero_buckets++;

	for (uint i = 1; i < buckets_size; ++i) {
		uint index = buckets_start + i;
		if (buckets[index] > 0) non_zero_buckets++;
		bucket_indexes[index] = bucket_indexes[index - 1] + buckets[index - 1];
	}

	if (non_zero_buckets == 1) singular_buckets[byte] = true;
}
