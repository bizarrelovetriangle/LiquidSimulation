#version 430 core
#include "../../common.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer ParticlesInput
{
	Particle particles[];
};
layout(std430, binding = 1) buffer GridInput
{
	GridCell grid[];
};
layout(std430, binding = 2) buffer PairsCount
{
	int pairs_count;
};
layout(std430, binding = 3) buffer PairsOutput
{
	PairData pairs[];
};
layout(std430, binding = 4) buffer GridCountsOutput
{
	int grid_counts[];
};
layout(std430, binding = 5) buffer GridColumnCountsOutput
{
	int grid_column_counts[];
};

layout(location = 0) uniform ivec2 gridSize;
layout(location = 1) uniform int chunk_size;

void main() {
	uint pairs_start = gl_WorkGroupID.x * chunk_size;
	uint pairs_end = min(pairs_start + chunk_size, pairs_count);

	for (uint i = pairs_start; i < pairs_end; ++i) {
		ivec2 pos = particles[pairs[i].first].gridPosition;
		atomicAdd(grid_counts[pos.y * gridSize.x + pos.x], 1);
		atomicAdd(grid_column_counts[pos.y], 1);
	}
}
