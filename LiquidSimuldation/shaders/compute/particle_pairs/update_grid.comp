#version 430 core
#include "../../common.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer GridInput
{
	GridCell grid[];
};
layout(std430, binding = 1) buffer GridCountsOutput
{
	int grid_counts[];
};
layout(std430, binding = 2) buffer GridColumnOffsetsOutput
{
	int grid_column_offsets[];
};

layout(location = 0) uniform ivec2 grid_size;

void main() {
	uint x = gl_WorkGroupID.x;
	grid[x].pairs_start = grid_column_offsets[x];
	grid[x].pairs_end = grid[x].pairs_start + grid_counts[x];

	for (int i = 1; i < grid_size.y; ++i) {
		uint y = i * grid_size.x;
		int pairs_start = grid[y - grid_size.x + x].pairs_end;
		grid[y + x].pairs_start = pairs_start;
		grid[y + x].pairs_end = pairs_start + grid_counts[y + x];
	}
}
