#version 430 core
#include "../../common.glsl"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer ParticlesInput
{
	Particle particles[];
};
layout(std430, binding = 1) buffer GridInput
{
	GridCell grid[];
};
layout(std430, binding = 2) buffer PairsCount
{
	int pairs_count;
};
layout(std430, binding = 3) buffer PairsOutput
{
	PairData pairs[];
};

layout(location = 0) uniform ivec2 gridSize;

void main() {
	for (int i = 0; i < gridSize.y * gridSize.x; ++i) {
		grid[i].pairs_start = 0;
		grid[i].pairs_end = 0;
	}
	
	ivec2 last_position = particles[pairs[0].first].gridPosition;
	for (int i = 1; i < pairs_count; ++i) {
		ivec2 grid_position = particles[pairs[i].first].gridPosition;
		if (last_position == grid_position) continue;
	
		grid[last_position.y * gridSize.x + last_position.x].pairs_end = i;
		grid[grid_position.y * gridSize.x + grid_position.x].pairs_start = i;
		last_position = grid_position;
	}
	grid[last_position.y * gridSize.x + last_position.x].pairs_end = pairs_count;
}
